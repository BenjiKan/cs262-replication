# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import chatroom_pb2 as chatroom__pb2


class ChatRoomStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateAccount = channel.unary_unary(
                '/chatroom.ChatRoom/CreateAccount',
                request_serializer=chatroom__pb2.Account.SerializeToString,
                response_deserializer=chatroom__pb2.requestReply.FromString,
                )
        self.DeleteAccount = channel.unary_unary(
                '/chatroom.ChatRoom/DeleteAccount',
                request_serializer=chatroom__pb2.Account.SerializeToString,
                response_deserializer=chatroom__pb2.requestReply.FromString,
                )
        self.GetAccountName = channel.unary_unary(
                '/chatroom.ChatRoom/GetAccountName',
                request_serializer=chatroom__pb2.AccountID.SerializeToString,
                response_deserializer=chatroom__pb2.AccountName.FromString,
                )
        self.ListAccounts = channel.unary_unary(
                '/chatroom.ChatRoom/ListAccounts',
                request_serializer=chatroom__pb2.listAccounts.SerializeToString,
                response_deserializer=chatroom__pb2.requestReply.FromString,
                )
        self.SendText = channel.unary_unary(
                '/chatroom.ChatRoom/SendText',
                request_serializer=chatroom__pb2.sendText.SerializeToString,
                response_deserializer=chatroom__pb2.requestReply.FromString,
                )


class ChatRoomServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateAccount(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteAccount(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAccountName(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListAccounts(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendText(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ChatRoomServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateAccount': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateAccount,
                    request_deserializer=chatroom__pb2.Account.FromString,
                    response_serializer=chatroom__pb2.requestReply.SerializeToString,
            ),
            'DeleteAccount': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteAccount,
                    request_deserializer=chatroom__pb2.Account.FromString,
                    response_serializer=chatroom__pb2.requestReply.SerializeToString,
            ),
            'GetAccountName': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAccountName,
                    request_deserializer=chatroom__pb2.AccountID.FromString,
                    response_serializer=chatroom__pb2.AccountName.SerializeToString,
            ),
            'ListAccounts': grpc.unary_unary_rpc_method_handler(
                    servicer.ListAccounts,
                    request_deserializer=chatroom__pb2.listAccounts.FromString,
                    response_serializer=chatroom__pb2.requestReply.SerializeToString,
            ),
            'SendText': grpc.unary_unary_rpc_method_handler(
                    servicer.SendText,
                    request_deserializer=chatroom__pb2.sendText.FromString,
                    response_serializer=chatroom__pb2.requestReply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'chatroom.ChatRoom', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ChatRoom(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateAccount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chatroom.ChatRoom/CreateAccount',
            chatroom__pb2.Account.SerializeToString,
            chatroom__pb2.requestReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteAccount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chatroom.ChatRoom/DeleteAccount',
            chatroom__pb2.Account.SerializeToString,
            chatroom__pb2.requestReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAccountName(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chatroom.ChatRoom/GetAccountName',
            chatroom__pb2.AccountID.SerializeToString,
            chatroom__pb2.AccountName.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListAccounts(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chatroom.ChatRoom/ListAccounts',
            chatroom__pb2.listAccounts.SerializeToString,
            chatroom__pb2.requestReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SendText(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chatroom.ChatRoom/SendText',
            chatroom__pb2.sendText.SerializeToString,
            chatroom__pb2.requestReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
