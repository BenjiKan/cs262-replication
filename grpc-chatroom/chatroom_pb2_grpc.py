# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import chatroom_pb2 as chatroom__pb2


class ChatRoomStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateUser = channel.unary_unary(
                '/chatroom.ChatRoom/CreateUser',
                request_serializer=chatroom__pb2.User.SerializeToString,
                response_deserializer=chatroom__pb2.requestReply.FromString,
                )
        self.Login = channel.unary_unary(
                '/chatroom.ChatRoom/Login',
                request_serializer=chatroom__pb2.User.SerializeToString,
                response_deserializer=chatroom__pb2.requestReply.FromString,
                )
        self.Logout = channel.unary_unary(
                '/chatroom.ChatRoom/Logout',
                request_serializer=chatroom__pb2.User.SerializeToString,
                response_deserializer=chatroom__pb2.requestReply.FromString,
                )
        self.DeleteUser = channel.unary_unary(
                '/chatroom.ChatRoom/DeleteUser',
                request_serializer=chatroom__pb2.User.SerializeToString,
                response_deserializer=chatroom__pb2.requestReply.FromString,
                )
        self.ListUsers = channel.unary_unary(
                '/chatroom.ChatRoom/ListUsers',
                request_serializer=chatroom__pb2.UserList.SerializeToString,
                response_deserializer=chatroom__pb2.requestReply.FromString,
                )
        self.SendMessage = channel.unary_unary(
                '/chatroom.ChatRoom/SendMessage',
                request_serializer=chatroom__pb2.Message.SerializeToString,
                response_deserializer=chatroom__pb2.requestReply.FromString,
                )
        self.IncomingStream = channel.unary_stream(
                '/chatroom.ChatRoom/IncomingStream',
                request_serializer=chatroom__pb2.User.SerializeToString,
                response_deserializer=chatroom__pb2.Message.FromString,
                )
        self.DeliverMessage = channel.unary_unary(
                '/chatroom.ChatRoom/DeliverMessage',
                request_serializer=chatroom__pb2.Message.SerializeToString,
                response_deserializer=chatroom__pb2.requestReply.FromString,
                )
        self.srv_GetNewChanges = channel.unary_stream(
                '/chatroom.ChatRoom/srv_GetNewChanges',
                request_serializer=chatroom__pb2.Empty.SerializeToString,
                response_deserializer=chatroom__pb2.internalRequest.FromString,
                )
        self.srv_CheckLeader = channel.unary_unary(
                '/chatroom.ChatRoom/srv_CheckLeader',
                request_serializer=chatroom__pb2.Empty.SerializeToString,
                response_deserializer=chatroom__pb2.requestReply.FromString,
                )
        self.srv_ElectLeader = channel.unary_unary(
                '/chatroom.ChatRoom/srv_ElectLeader',
                request_serializer=chatroom__pb2.Empty.SerializeToString,
                response_deserializer=chatroom__pb2.requestReply.FromString,
                )


class ChatRoomServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Login(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Logout(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListUsers(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def IncomingStream(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeliverMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def srv_GetNewChanges(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def srv_CheckLeader(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def srv_ElectLeader(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ChatRoomServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateUser': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateUser,
                    request_deserializer=chatroom__pb2.User.FromString,
                    response_serializer=chatroom__pb2.requestReply.SerializeToString,
            ),
            'Login': grpc.unary_unary_rpc_method_handler(
                    servicer.Login,
                    request_deserializer=chatroom__pb2.User.FromString,
                    response_serializer=chatroom__pb2.requestReply.SerializeToString,
            ),
            'Logout': grpc.unary_unary_rpc_method_handler(
                    servicer.Logout,
                    request_deserializer=chatroom__pb2.User.FromString,
                    response_serializer=chatroom__pb2.requestReply.SerializeToString,
            ),
            'DeleteUser': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteUser,
                    request_deserializer=chatroom__pb2.User.FromString,
                    response_serializer=chatroom__pb2.requestReply.SerializeToString,
            ),
            'ListUsers': grpc.unary_unary_rpc_method_handler(
                    servicer.ListUsers,
                    request_deserializer=chatroom__pb2.UserList.FromString,
                    response_serializer=chatroom__pb2.requestReply.SerializeToString,
            ),
            'SendMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.SendMessage,
                    request_deserializer=chatroom__pb2.Message.FromString,
                    response_serializer=chatroom__pb2.requestReply.SerializeToString,
            ),
            'IncomingStream': grpc.unary_stream_rpc_method_handler(
                    servicer.IncomingStream,
                    request_deserializer=chatroom__pb2.User.FromString,
                    response_serializer=chatroom__pb2.Message.SerializeToString,
            ),
            'DeliverMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.DeliverMessage,
                    request_deserializer=chatroom__pb2.Message.FromString,
                    response_serializer=chatroom__pb2.requestReply.SerializeToString,
            ),
            'srv_GetNewChanges': grpc.unary_stream_rpc_method_handler(
                    servicer.srv_GetNewChanges,
                    request_deserializer=chatroom__pb2.Empty.FromString,
                    response_serializer=chatroom__pb2.internalRequest.SerializeToString,
            ),
            'srv_CheckLeader': grpc.unary_unary_rpc_method_handler(
                    servicer.srv_CheckLeader,
                    request_deserializer=chatroom__pb2.Empty.FromString,
                    response_serializer=chatroom__pb2.requestReply.SerializeToString,
            ),
            'srv_ElectLeader': grpc.unary_unary_rpc_method_handler(
                    servicer.srv_ElectLeader,
                    request_deserializer=chatroom__pb2.Empty.FromString,
                    response_serializer=chatroom__pb2.requestReply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'chatroom.ChatRoom', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ChatRoom(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chatroom.ChatRoom/CreateUser',
            chatroom__pb2.User.SerializeToString,
            chatroom__pb2.requestReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Login(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chatroom.ChatRoom/Login',
            chatroom__pb2.User.SerializeToString,
            chatroom__pb2.requestReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Logout(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chatroom.ChatRoom/Logout',
            chatroom__pb2.User.SerializeToString,
            chatroom__pb2.requestReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chatroom.ChatRoom/DeleteUser',
            chatroom__pb2.User.SerializeToString,
            chatroom__pb2.requestReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListUsers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chatroom.ChatRoom/ListUsers',
            chatroom__pb2.UserList.SerializeToString,
            chatroom__pb2.requestReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SendMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chatroom.ChatRoom/SendMessage',
            chatroom__pb2.Message.SerializeToString,
            chatroom__pb2.requestReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def IncomingStream(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/chatroom.ChatRoom/IncomingStream',
            chatroom__pb2.User.SerializeToString,
            chatroom__pb2.Message.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeliverMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chatroom.ChatRoom/DeliverMessage',
            chatroom__pb2.Message.SerializeToString,
            chatroom__pb2.requestReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def srv_GetNewChanges(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/chatroom.ChatRoom/srv_GetNewChanges',
            chatroom__pb2.Empty.SerializeToString,
            chatroom__pb2.internalRequest.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def srv_CheckLeader(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chatroom.ChatRoom/srv_CheckLeader',
            chatroom__pb2.Empty.SerializeToString,
            chatroom__pb2.requestReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def srv_ElectLeader(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chatroom.ChatRoom/srv_ElectLeader',
            chatroom__pb2.Empty.SerializeToString,
            chatroom__pb2.requestReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
